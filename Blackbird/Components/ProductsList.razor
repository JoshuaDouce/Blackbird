@using Blackbird.Domain.Entities
@using Blackbird.Interfaces;
@using MudBlazor;
@inject IProductService ProductService

<MudContainer>
    <MudGrid>
        @if (Products == null)
        {
            <MudProgressCircular />
        }
        else
        {
            @foreach (var product in Products)
            {
                <MudItem xs="12" sm="6" md="4" lg="3">
                    <MudCard Elevation="5" Style="width: 100%; margin-bottom: 16px;">
                        <MudCardMedia>
                            <MudText Typo="Typo.h6">@product.Name</MudText>
                        </MudCardMedia>
                        <MudCardContent>
                            <MudText Typo="Typo.body1" Style="@($"color: {(product.Price < 10 ? "green" : "blue")};")">Price: @product.Price</MudText>
                            <MudText Typo="Typo.body2">@product.Description</MudText>
                        </MudCardContent>
                        <MudCardActions>
                            <MudButton Variant="Variant.Outlined" OnClick="@(() => ShowDetails(product))">View Details</MudButton>
                        </MudCardActions>
                    </MudCard>
                </MudItem>
            }
        }
    </MudGrid>
</MudContainer>

@code {
    private List<Product> Products { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Products = (await ProductService.GetAllProductsAsync()).ToList();
    }

    private void ShowDetails(Product product)
    {
        // Implement the method to show product details
    }
}
